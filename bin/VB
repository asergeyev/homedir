#!/bin/bash

# Bump version in GITROOT/VERSION file and update CHANGES if there
# is more than PATHVERSION updated

WORKDIR=$(git rev-parse --show-toplevel 2> /dev/null)
if [[ -z $WORKDIR ]]; then
    echo "this version bump only works in git worktree"
fi

cd $WORKDIR
if [ -f VERSION ]; then
    IFS='.'
    read -ra BASE <<< "$(cat VERSION)"
    V_MAJOR=${BASE[0]:-0}
    V_MINOR=${BASE[1]:-0}
    V_PATCH=${BASE[2]:-0}
    echo "Current version : $V_MAJOR.$V_MINOR.$V_PATCH"
    IFS=' '

    PREVSTART=$(git tag | sort --version-sort | tail -1)

    echo "CHANGES since last tag ($(git tag -l -n1 $PREVSTART | sed 's/v[0-9\.\t ]*//' )):"
    git log --pretty=format:"> %s" $PREVSTART...HEAD 2>&1 | grep -v "Version bump" | grep -v "CHANGES" 

    V_PATCH=$((V_PATCH + 1))
    SUGGEST="$V_MAJOR.$V_MINOR.$V_PATCH"
    read -p "Enter a version number [$SUGGEST]: " INPUT_VERSION
    if [ "$INPUT_VERSION" = "" ]; then
        INPUT_VERSION=$SUGGEST
    else
        # TRIM SPACES
        INPUT_VERSION=$(echo $INPUT_VERSION)
    fi

    read -p "Enter a comment [Tagging $INPUT_VERSION]: " INPUT_COMMENT
    if [ "$INPUT_COMMENT" = "" ]; then
        INPUT_COMMENT="Tagging $INPUT_VERSION"
    fi

    echo "Will set new version to be $INPUT_VERSION"
    echo $INPUT_VERSION > VERSION
    if [ "$(echo $INPUT_VERSION | cut -f-2 -d '.')" != "$V_MAJOR.$V_MINOR" ]; then
        # tagging minor version update, let's fetch all tags and put them to log
        echo "Version $INPUT_VERSION:" > tmpfile
        echo >> tmpfile
        git tag -l -n1 $V_MAJOR.$V_MINOR.* | sed 's/v[0-9\.\t ]*//' | xargs -l echo "  * " >> tmpfile
        echo >> tmpfile
        echo " -- $(git config user.name) <$(git config user.email)>  $(date -R)" >> tmpfile
        echo >> tmpfile
        cat CHANGES >> tmpfile
        mv tmpfile CHANGES
        mcedit CHANGES
        if [[ "$?" !=  "0" ]] || [[ $(wc -l CHANGES) -lt 4  ]]; then
            echo "Aborting the changes, recovering previous version file..."
            git checkout -- CHANGES VERSION
            exit 2
        fi
        git add CHANGES
    fi
    git add VERSION
    git commit -m "Version bump to $INPUT_VERSION"
    git tag -a -m "$INPUT_COMMENT" "v$INPUT_VERSION"
    if git rev-parse --abbrev-ref master@{upstream} >/dev/null 2>&1; then
        git push --tags && git push
    else
        echo "No upstream configured, not pushing tags out"
    fi
else
    echo "Could not find a VERSION file"
fi
